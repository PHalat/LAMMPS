#!/usr/bin/env python
import sys
import argparse

def scale_charges(text,factor):
    '''
    This function parses through the ATOMS section of a dictionary and
    scales the charge column accordingly.
    It stops once it reads 'BONDS' in a line.
    '''
    for i in range(len(text)):
        if 'BONDS' in text[i]:
            break
        if text[i][0] != '#' and len(text[i].split()) > 2:
            spl = text[i].split()
            charge = '%.5f' % ( float(factor)  * float(spl[3]))
            spl[3] = charge
            text[i] = ' '.join(spl) + ' \n'  

def main():
    parser = argparse.ArgumentParser(
        description = 'Just a code to scale the charges of a dictionaruy of your choice'\
                      '. You may specify an output dictionary if you choose, and any '\
                      'number as a scaling factor.')
    parser.add_argument('files', nargs='+',
                        help = 'input [output]')
    parser.add_argument('-c','--charge', default='0.8',
                        help = 'charge scaling factor. Default: 0.8')
    args = parser.parse_args()

    fromfile = args.files[0]

    with open(fromfile, 'r') as f:
        fromlines = f.readlines()
        f.close()

    cf = args.charge
    scale_charges(fromlines,cf)

    if len(args.files) > 1:
        with open(args.files[1], 'w') as dish:
            for i in fromlines:
                dish.write(i)
            dish.close()
    else:
        with open(fromfile, 'w') as dish:
            for i in fromlines:
                dish.write(i)
            dish.close()

if __name__ == '__main__':
    main()
 
